trigger:
  - main

pool:
  vmImage: "ubuntu-latest"

stages:
  # Build and publish artifacts of all the independent bits
  # that then get used in the Decsys app itself.
  - stage: Publish_Parts
    displayName: Publish Parts
    jobs:
      # build all the JS that doesn't depend on other workspace packages
      - job: independent_js
        displayName: "Publish: "
        variables:
          buildScript: build
          # stop CRA's webpack build generating sourcemaps in production
          # this shouldn't affect the response item rollup builds
          # but tbh it doesn't matter if it does since this is for production
          GENERATE_SOURCEMAP: false
        strategy:
          matrix:
            docs:
              packageName: docs
              artifactName: docs
              publishPath: $(Build.SourcesDirectory)/docs/build
            docs_decsyshosted:
              packageName: docs
              artifactName: docs_decsyshosted
              publishPath: $(Build.SourcesDirectory)/docs/build
              buildScript: "build:decsyshosted"
            client_app:
              packageName: client-app
              artifactName: client-app
              publishPath: $(Build.SourcesDirectory)/app/client-app/build
            choose_one_response:
              packageName: response-items
              buildScript: build:choose-one
              artifactName: choose-one-response
              publishPath: $(Build.SourcesDirectory)/response-items/dist
            confirmation_response:
              packageName: response-items
              buildScript: build:confirmation
              artifactName: confirmation-response
              publishPath: $(Build.SourcesDirectory)/response-items/dist
            freetext_response:
              packageName: response-items
              buildScript: build:freetext
              artifactName: freetext-response
              publishPath: $(Build.SourcesDirectory)/response-items/dist
            discrete_scale:
              packageName: response-items
              buildScript: build:discrete-scale
              artifactName: discrete-scale-response
              publishPath: $(Build.SourcesDirectory)/response-items/dist
            ellipse_scale:
              packageName: response-items
              buildScript: build:ellipse-scale
              artifactName: ellipse-scale-response
              publishPath: $(Build.SourcesDirectory)/response-items/dist
            visual_analog_scale:
              packageName: response-items
              buildScript: build:visual-analog-scale
              artifactName: visual-analog-scale-response
              publishPath: $(Build.SourcesDirectory)/response-items/dist
            multi_visual_analog_scale:
              packageName: response-items
              buildScript: build:multi-visual-analog-scale
              artifactName: multi-visual-analog-scale-response
              publishPath: $(Build.SourcesDirectory)/response-items/dist
        steps:
          - template: templates/js-package.publish.yml
            parameters:
              packageName: $(packageName)
              artifactName: $(artifactName)
              publishPath: $(publishPath)
              buildScript: $(buildScript)

  - stage: Publish_Dotnet
    displayName: Publish Decsys
    jobs:
      - job: Dotnet
        displayName: "Publish: "
        variables:
          buildConfiguration: release
          DOTNET_NOLOGO: true
          DOTNET_CLI_TELEMETRY_OPTOUT: true
          dotnetVersion: 6.0.x
          responseItemsPath: $(Build.SourcesDirectory)/app/Decsys/components
          responseItemsArtifactPattern: "**/*.js"
        strategy:
          matrix:
            win_x64_singlefile:
              name: win-x64-singlefile
              args: >-
                -r win-x64
                -p:PublishSingleFile=true
                -p:IncludeNativeLibrariesInSingleFile=true
            win_x64:
              name: win-x64
              args: -r win-x64
            dotnet:
              name: dotnet-$(dotnetVersion)
              args: ""
        steps:
          # Grab all the previously published artifacts
          # and put them in the right place for `dotnet publish`
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: docs_decsyshosted
              path: $(Build.SourcesDirectory)/app/Decsys/wwwroot/docs
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: client-app
              path: $(Build.SourcesDirectory)/app/Decsys/ClientApp
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: choose-one-response
              path: $(responseItemsPath)
              itemPattern: $(responseItemsArtifactPattern)
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: confirmation-response
              path: $(responseItemsPath)
              itemPattern: $(responseItemsArtifactPattern)
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: freetext-response
              path: $(responseItemsPath)
              itemPattern: $(responseItemsArtifactPattern)
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: discrete-scale-response
              path: $(responseItemsPath)
              itemPattern: $(responseItemsArtifactPattern)
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: ellipse-scale-response
              path: $(responseItemsPath)
              itemPattern: $(responseItemsArtifactPattern)
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: visual-analog-scale-response
              path: $(responseItemsPath)
              itemPattern: $(responseItemsArtifactPattern)
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: multi-visual-analog-scale-response
              path: $(responseItemsPath)
              itemPattern: $(responseItemsArtifactPattern)

          # dotnet publish
          - task: UseDotNet@2
            inputs:
              packageType: "sdk"
              version: $(dotnetVersion)
              includePreviewVersions: true

          - script: >
              dotnet restore
              --locked-mode
            workingDirectory: app/Decsys
            displayName: dotnet restore

          - script: >
              dotnet publish
              -c $(buildConfiguration)
              --no-restore
              -o $(Build.StagingDirectory)
              $(args)
            workingDirectory: app/Decsys
            displayName: dotnet publish

          - publish: $(Build.StagingDirectory)
            artifact: $(name)
