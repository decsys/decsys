trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

stages:
  # We do a restore up front
  # to ensure the rest of the jobs
  # get to use a populated cache
  - stage: Restore
    jobs:
      - job: Yarn
        steps:
          - template: templates/yarn-cached.yml

  # Build and publish artifacts of all the independent bits
  # that then get used in the Decsys app itself.
  - stage: Publish_Parts
    displayName: Publish Parts
    jobs:
      # read metadata and set derived variables
      # for the rest of the pipeline to use
      - job: Metadata
        steps:
          - task: LoadJsonVariables@1
            inputs:
              JsonSource: app/client-app/package.json
              VariablePrefix: pkg
            displayName: Read package.json
          - script: >-
              echo '##vso[task.setvariable
              variable=clientVersion;isOutput=true]$(pkg_version)'
            name: setVariables
            displayName: Set Variables

      # Generate a version metadata file for the platform
      - job: Version_File
        displayName: Create Version.txt
        dependsOn: Metadata
        variables:
          clientVersion: >-
            $[ dependencies.Metadata.outputs['setVariables.clientVersion'] ]
        steps:
          - checkout: none
          - task: file-creator@5
            inputs:
              fileoverwrite: true
              skipempty: true
              filepath: $(Build.StagingDirectory)/version.txt
              filecontent: |-
                Build=$(Build.BuildNumber)
                Client App=$(clientVersion)
          - publish: $(Build.StagingDirectory)
            artifact: version

      # build all the JS that doesn't depend on other workspace packages
      - job: independent_js
        displayName: Publish independent JS packages
        strategy:
          matrix:
            docs:
              packageName: docs
              artifactName: docs
              publishPath: $(Build.SourcesDirectory)/docs/build
            client_app:
              packageName: '@decsys/client=app'
              artifactName: client-app
              publishPath: $(Build.SourcesDirectory)/app/client-app/build
            choose_one_response:
              packageName: '@decsys/choose-one-response'
              artifactName: choose-one-response
              publishPath: $(Build.SourcesDirectory)/response-items/choose-one/dist
            confirmation_response:
              packageName: '@decsys/confirmation-response'
              artifactName: confirmation-response
              publishPath: $(Build.SourcesDirectory)/response-items/confirmation/dist
            freetext_response:
              packageName: '@decsys/freetext-response'
              artifactName: freetext-response
              publishPath: $(Build.SourcesDirectory)/response-items/freetext/dist
        steps:
          - template: templates/js-package.publish.yml
            parameters:
              packageName: $(packageName)
              artifactName: $(artifactName)
              publishPath: $(publishPath)

      # this isn't in the matrix so it can be depended on
      - job: Rating_Scales
        displayName: Build rating-scales
        steps:
          - template: templates/js-package.publish.yml
            parameters:
              packageName: '@decsys/rating-scales'
              artifactName: rating-scales
              publishPath: $(Build.SourcesDirectory)/pacakges/rating-scales/cjs
      
      - job: scale_responses
        displayName: Publish Rating Scale Response packages
        dependsOn: Rating_Scales
        strategy:
          matrix:
            discrete_scale:
              packageName: '@decsys/discrete-scale-reponse'
              artifactName: discrete-scale-response
              publishPath: $(Build.SourcesDirectory)/response-items/discrete-scale/dist
            ellipse_scale:
              packageName: '@decsys/ellipse-scale-reponse'
              artifactName: ellipse-scale-response
              publishPath: $(Build.SourcesDirectory)/response-items/ellipse-scale/dist
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              source: current
              artifact: rating-scales
              path: '$(Build.SourcesDirectory)/packages/rating-scales/cjs'
          - template: templates/js-package.publish.yml
            parameters:
              packageName: $(packageName)
              artifactName: $(artifactName)
              publishPath: $(publishPath)


