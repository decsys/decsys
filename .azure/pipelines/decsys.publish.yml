trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

stages:
  # We do a restore up front
  # to ensure the rest of the jobs
  # get to use a populated cache
  - stage: Restore
    jobs:
      - job: Yarn
        steps:
          - template: templates/yarn-cached.yml

  # Build and publish artifacts of all the independent bits
  # that then get used in the Decsys app itself.
  - stage: Publish_Parts
    displayName: Publish Parts
    jobs:
      # read metadata and set derived variables
      # for the rest of the pipeline to use
      - job: Metadata
        steps:
          - task: LoadJsonVariables@1
            inputs:
              JsonSource: app/client-app/package.json
              VariablePrefix: pkg
            displayName: Read package.json
          - script: >-
              echo '##vso[task.setvariable
              variable=clientVersion;isOutput=true]$(pkg_version)'
            name: setVariables
            displayName: Set Variables

      # Generate a version metadata file for the platform
      - job: Version_File
        displayName: "Publish: Version.txt"
        dependsOn: Metadata
        variables:
          clientVersion: >-
            $[ dependencies.Metadata.outputs['setVariables.clientVersion'] ]
        steps:
          - checkout: none
          - task: file-creator@5
            inputs:
              fileoverwrite: true
              skipempty: true
              filepath: $(Build.StagingDirectory)/version.txt
              filecontent: |-
                Build=$(Build.BuildNumber)
                Client App=$(clientVersion)
          - publish: $(Build.StagingDirectory)
            artifact: version

      # build all the JS that doesn't depend on other workspace packages
      - job: independent_js
        displayName: "Publish: "
        variables:
          buildScript: build
        strategy:
          matrix:
            docs:
              packageName: docs
              artifactName: docs
              publishPath: $(Build.SourcesDirectory)/docs/build
            docs_selfhosted:
              packageName: docs
              artifactName: docs_selfhosted
              publishPath: $(Build.SourcesDirectory)/docs/build
              buildScript: "build:selfhosted"
            client_app:
              packageName: "client-app"
              artifactName: client-app
              publishPath: $(Build.SourcesDirectory)/app/client-app/build
            choose_one_response:
              packageName: "choose-one-response"
              artifactName: choose-one-response
              publishPath: $(Build.SourcesDirectory)/response-items/choose-one/dist
            confirmation_response:
              packageName: "confirmation-response"
              artifactName: confirmation-response
              publishPath: $(Build.SourcesDirectory)/response-items/confirmation/dist
            freetext_response:
              packageName: "freetext-response"
              artifactName: freetext-response
              publishPath: $(Build.SourcesDirectory)/response-items/freetext/dist
        steps:
          - template: templates/js-package.publish.yml
            parameters:
              packageName: $(packageName)
              artifactName: $(artifactName)
              publishPath: $(publishPath)
              buildScript: $(buildScript)

      # this isn't in the matrix so it can be depended on
      - job: Rating_Scales
        displayName: "Build: rating-scales"
        steps:
          - template: templates/js-package.publish.yml
            parameters:
              packageName: "@decsys/rating-scales"
              artifactName: rating-scales
              publishPath: $(Build.SourcesDirectory)/packages/rating-scales/cjs

      - job: scale_responses
        displayName: "Publish: "
        dependsOn: Rating_Scales
        strategy:
          matrix:
            discrete_scale:
              packageName: "discrete-scale-response"
              artifactName: discrete-scale-response
              publishPath: $(Build.SourcesDirectory)/response-items/discrete-scale/dist
            ellipse_scale:
              packageName: "ellipse-scale-response"
              artifactName: ellipse-scale-response
              publishPath: $(Build.SourcesDirectory)/response-items/ellipse-scale/dist
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              source: current
              artifact: rating-scales
              path: "$(Build.SourcesDirectory)/packages/rating-scales/cjs"
          - template: templates/js-package.publish.yml
            parameters:
              packageName: $(packageName)
              artifactName: $(artifactName)
              publishPath: $(publishPath)

  - stage: Publish_Dotnet
    displayName: Publish Decsys
    jobs:
      - job: Dotnet
        displayName: "Publish: "
        variables:
          buildConfiguration: release
          DOTNET_NOLOGO: true
          DOTNET_CLI_TELEMETRY_OPTOUT: true
          dotnetVersion: 5.0.x
          responseItemsPath: $(Build.SourcesDirectory)/app/Decsys/components
          responseItemsArtifactPattern: "**/*.js"
        strategy:
          matrix:
            win_x64_singlefile:
              name: win-x64-singlefile
              args: >-
                -r win-x64
                -p:PublishSingleFile=true
                -p:IncludeNativeLibrariesInSingleFile=true
            win_x64:
              name: win-x64
              args: -r win-x64
            dotnet:
              name: dotnet-$(dotnetVersion)
              args: ""
        steps:
          # Grab all the previously published artifacts
          # and put them in the right place for `dotnet publish`
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: docs_selfhosted
              path: $(Build.SourcesDirectory)/app/Decsys/wwwroot/docs
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: client-app
              path: $(Build.SourcesDirectory)/app/Decsys/ClientApp
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: choose-one-response
              path: $(responseItemsPath)
              itemPattern: $(responseItemsArtifactPattern)
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: confirmation-response
              path: $(responseItemsPath)
              itemPattern: $(responseItemsArtifactPattern)
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: freetext-response
              path: $(responseItemsPath)
              itemPattern: $(responseItemsArtifactPattern)
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: discrete-scale-response
              path: $(responseItemsPath)
              itemPattern: $(responseItemsArtifactPattern)
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: ellipse-scale-response
              path: $(responseItemsPath)
              itemPattern: $(responseItemsArtifactPattern)

          # dotnet publish
          - task: UseDotNet@2
            inputs:
              packageType: "sdk"
              version: $(dotnetVersion)
              includePreviewVersions: true

          - script: >
              dotnet restore
              --locked-mode
            workingDirectory: app/Decsys
            displayName: dotnet restore

          - script: >
              dotnet publish
              -c $(buildConfiguration)
              --no-restore
              -o $(Build.StagingDirectory)
              $(args)
            workingDirectory: app/Decsys
            displayName: dotnet publish

          - publish: $(Build.StagingDirectory)
            artifact: $(name)
