# This workflow is currently manually triggered
# In future we could use some kind of repo version manifesting
# or other conditions to automate releases

# It takes a workflow run id (expected to be a `publish.decsys` run)
# downloads the published artifacts
# creates a release using the app version of the commit
# the artifacts were published from
name: GitHub Release
on:
  workflow_dispatch:
    inputs:
      publish-run-id:
        description: The Workflow Run ID for a successful Publish of DECSYS
        required: true
        type: string
      is-latest:
        description: Should this release be marked as "latest"?
        required: false
        default: false
        type: boolean

env:
  valid-workflow-id: 51743832 # publish.decsys
  run-id: ${{ github.event.inputs.publish-run-id }}
  is-latest: ${{ github.event.inputs.is-latest }}

jobs:
  # get some info on the workflow run so we can
  # - validate it
  # - check out its source for info
  fetch-run:
    runs-on: ubuntu-latest
    outputs:
      publish-commit: ${{ fromJSON(steps.run-info.outputs.result).head_sha }}
    steps:
      - name: Get workflow run
        id: run-info
        uses: actions/github-script@v6
        with:
          script: |
            const { data: { workflow_id, head_sha, conclusion } } =
              await github.rest.actions.getWorkflowRun({
                owner: 'decsys',
                repo: 'decsys',
                run_id: ${{ env.run-id }}
              });
            return { workflow_id, head_sha, conclusion };

      # Fail this run if anything about the target run is invalid
      - name: Fail invalid workflow run
        if: |
          fromJSON(steps.run-info.outputs.result).workflow_id != env.valid-workflow-id || 
          fromJSON(steps.run-info.outputs.result).conclusion != 'success'
        run: exit 1

  release:
    runs-on: ubuntu-latest
    needs: [fetch-run]
    steps:
      # determine version from the workflow run's commit
      - name: Checkout target workflow run's commit
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.fetch-run.outputs.publish-commit }}
      - name: Read version
        id: version
        uses: bbonkr/get-version-action@v1
        with:
          project: app/Decsys/Decsys.csproj

      # download artifacts from the run we want on the release
      - name: Download workflow artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: ${{ env.run-id }}
          skip_unpack: true # leave them zipped

      # make the release
      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ steps.version.outputs.version }}
          commit: ${{ needs.fetch-run.outputs.publish-commit }}
          name: v${{ steps.version.outputs.version }}
          body: |
            # DECSYS v${{ steps.version.outputs.version }}

            ## Assets available for download:

            - DECSYS for Windows (x64) native
            - DECSYS for the .NET Runtime (cross platform)
          generateReleaseNotes: true
          prerelease: ${{ steps.version.outputs.pre-release != '' }}
          makeLatest: ${{ env.is-latest }}
          artifacts: decsys*.zip
          artifactContentType: application/zip
